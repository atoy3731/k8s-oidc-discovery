name: Dev Build

on:
  push:
    branches:
      - '*'

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  GOSEC_VERSION: v2.22.5
  GOLANGCI_LINT_VERSION: v2.3.0
  STATICCHECK_VERSION: 2025.1

jobs:
  go-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Cache Go tools
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
          ~/go/bin
        key: go-tools-${{ runner.os }}-${{ hashFiles('**/go.sum') }}

    - name: Install linters and tools
      run: |
        mkdir -p $HOME/go/bin
        echo "$HOME/go/bin" >> $GITHUB_PATH
        export GOBIN=$HOME/go/bin

        command -v gosec >/dev/null || \
          go install github.com/securego/gosec/v2/cmd/gosec@${GOSEC_VERSION}

        command -v staticcheck >/dev/null || \
          go install honnef.co/go/tools/cmd/staticcheck@${STATICCHECK_VERSION}

        command -v golangci-lint >/dev/null || \
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@${GOLANGCI_LINT_VERSION}

    - name: Run go vet
      run: go vet ./...

    - name: Run gosec
      run: gosec ./...

    - name: Run staticcheck
      run: staticcheck ./...

    - name: Run golangci-lint
      run: golangci-lint run --timeout=5m

  docker-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Get Refs
      id: get_refs
      run: |
        echo "TAG_NAME=${GITHUB_REF##*/}" >> "$GITHUB_ENV"
        echo "REPO_NAME=`basename ${{ github.repository }}`" >> "$GITHUB_ENV"

    - name: 'Build Image'
      run: |
        docker build . --tag $IMAGE_NAME:${{ env.TAG_NAME }}

  helm-template:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Get Refs
        id: get_refs
        run: |
          echo "TAG_NAME=${GITHUB_REF##*/}" >> "$GITHUB_ENV"
          echo "REPO_NAME=`basename ${{ github.repository }}`" >> "$GITHUB_ENV"

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Template Helm Chart
        id: template-helm-chart
        run: |
          sed -i -e'' "s/%CHART_VERSION%/0.0.0/g" charts/k8s-oidc-discovery/Chart.yaml
          helm template charts/k8s-oidc-discovery