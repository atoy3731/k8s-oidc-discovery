name: Publish Release

on:
  push:
    tags:
      - '*'

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  go-test:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Cache Go tools
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
          ~/go/bin
        key: go-tools-${{ runner.os }}-${{ hashFiles('**/go.sum') }}

    - name: Install linters and tools
      run: |
        mkdir -p ~/go/bin
        echo "$HOME/go/bin" >> $GITHUB_PATH

        command -v gosec >/dev/null || go install github.com/securego/gosec/v2/cmd/gosec@latest
        command -v staticcheck >/dev/null || go install honnef.co/go/tools/cmd/staticcheck@latest
        command -v golangci-lint >/dev/null || go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

    - name: Run go vet
      run: go vet ./...

    - name: Run gosec
      run: gosec ./...

    - name: Run staticcheck
      run: staticcheck ./...

    - name: Run golangci-lint
      run: golangci-lint run --timeout=5m


  docker-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: Get Refs
      id: get_refs
      run: |
        echo "TAG_NAME=${GITHUB_REF##*/}" >> "$GITHUB_ENV"
        echo "REPO_NAME=`basename ${{ github.repository }}`" >> "$GITHUB_ENV"

    - name: 'Login to GitHub Container Registry'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 'Build Inventory Image'
      run: |
        docker build . --tag $IMAGE_NAME:${{ env.TAG_NAME }}
        docker push $IMAGE_NAME:${{ env.TAG_NAME }}

  helm-publish:
    runs-on: ubuntu-latest
    needs: docker-push
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Get Refs
        id: get_refs
        run: |
          echo "TAG_NAME=${GITHUB_REF##*/}" >> "$GITHUB_ENV"
          echo "REPO_NAME=`basename ${{ github.repository }}`" >> "$GITHUB_ENV"

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Publish Helm chart
        id: publish-helm-chart
        run: |
          cp -r charts/rke2-oidc-discovery /tmp/chart
          helm package -d /tmp/ /tmp/chart
          helm push /tmp/${{ env.REPO_NAME }}-${{ env.TAG_NAME }}.tgz oci://ghcr.io/$GITHUB_REPOSITORY_OWNER/charts

  create-release:
    runs-on: ubuntu-latest
    needs: helm-publish
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release ${{ github.ref }}
          draft: false
          prerelease: false